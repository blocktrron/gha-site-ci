name: "Build Gluon images"
on: [push]

jobs:
  build-meta:
    outputs:
      release-version: ${{ steps.build-metadata.outputs.release-version }}
      autoupdater-enabled: ${{ steps.build-metadata.outputs.autoupdater-enabled }}
      autoupdater-branch: ${{ steps.build-metadata.outputs.autoupdater-branch }}
      gluon-repository: ${{ steps.build-metadata.outputs.gluon-repository }}
      gluon-commit: ${{ steps.build-metadata.outputs.gluon-commit }}
      manifest-stable: ${{ steps.build-metadata.outputs.manifest-stable }}
      manifest-beta: ${{ steps.build-metadata.outputs.manifest-beta }}
      manifest-testing: ${{ steps.build-metadata.outputs.manifest-testing }}
    runs-on: ubuntu-latest
    name: Determine build-meta
    steps:
      - uses: actions/checkout@v3

      - name: Get build-metadata
        id: build-metadata
        run: bash .github/build-meta.sh

      - name: Print build-metadata
        run: cat $GITHUB_OUTPUT


  targets:
    needs: build-meta
    outputs:
      targets: ${{ steps.get-targets.outputs.targets }}
    runs-on: ubuntu-latest
    name: Get Gluon targets
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: ${{ needs.build-meta.outputs.gluon-repository }}
          ref: ${{ needs.build-meta.outputs.gluon-commit }}
          path: 'gluon-gha-data/gluon'

      - name: Get Targets
        uses: ./.github/actions/get-targets
        id: get-targets
        with:
          gluon-path: "gluon-gha-data/gluon"
          broken: "1"


  host-tools:
    needs: build-meta
    runs-on: ubuntu-latest
    name: Build host-tools
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: ${{ needs.build-meta.outputs.gluon-repository }}
          ref: ${{ needs.build-meta.outputs.gluon-commit }}
          path: 'gluon-gha-data/gluon'

      - name: Build host-tools
        uses: ./.github/actions/tools
        id: build-host-tools
        with:
          gluon-path: "gluon-gha-data/gluon"
          output-path: "gluon-gha-data/openwrt"

      - name: Archive build output
        uses: actions/upload-artifact@v3
        with:
          name: openwrt
          path: "gluon-gha-data/openwrt"


  build:
    needs: [ targets, build-meta, host-tools ]
    if: ${{ needs.targets.outputs.targets != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.targets.outputs.targets) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: ${{ needs.build-meta.outputs.gluon-repository }}
          ref: ${{ needs.build-meta.outputs.gluon-commit }}
          path: 'gluon-gha-data/gluon'
      
      - name: Print CPU info
        run: cat /proc/cpuinfo
      
      - name: Print meminfo
        run: cat /proc/meminfo

      - name: Download prepared OpenWrt
        uses: actions/download-artifact@v3
        with:
          name: openwrt
          path: "gluon-gha-data/openwrt"

      - name: Restore OpenWrt
        run: tar xf gluon-gha-data/openwrt/openwrt.tar.xz -C gluon-gha-data/gluon

      - name: Gluon Update
        uses: ./.github/actions/build
        id: update-gluon
        with: 
          gluon-path: "gluon-gha-data/gluon"
          hardware-target: ath79-generic
          make-target: update

      - name: Build
        uses: ./.github/actions/build
        id: build-gluon
        with:
          gluon-path: "gluon-gha-data/gluon"
          hardware-target: ${{ matrix.target }}
          broken: "1"
          deprecated: "0"
          autoupdater-enabled: ${{ needs.build-meta.outputs.autoupdater-enabled }}
          autoupdater-branch: ${{ needs.build-meta.outputs.autoupdater-branch }}
          release: ${{ needs.build-meta.outputs.release-version }}
      
      - name: Pack and Upload build output
        uses: ./.github/actions/build-artifact
        with:
          gluon-path: "gluon-gha-data/gluon"
          hardware-target: ${{ matrix.target }}


  manifest:
    needs: [ build, build-meta, targets ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: "gluon-gha-data/gluon-output"

      - name: Clone Gluon
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.build-meta.outputs.gluon-repository }}
          ref: ${{ needs.build-meta.outputs.gluon-commit }}
          path: 'gluon-gha-data/gluon'

      - name: Download prepared OpenWrt
        uses: actions/download-artifact@v3
        with:
          name: openwrt
          path: "gluon-gha-data/openwrt"

      - name: Restore OpenWrt
        run: tar xf gluon-gha-data/openwrt/openwrt.tar.xz -C gluon-gha-data/gluon

      - name: Combine Build output
        uses: ./.github/actions/build-combine
        with:
          artifact-dir: "gluon-gha-data/gluon-output"
          output-dir: "gluon-gha-data/gluon"
          targets: ${{ needs.targets.outputs.targets }}

      - name: Gluon Update
        uses: ./.github/actions/build
        id: update-gluon
        with: 
          gluon-path: "gluon-gha-data/gluon"
          make-target: update

      - name: Manifest (Stable)
        uses: ./.github/actions/build
        if: ${{ needs.build-meta.outputs.manifest-stable != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          make-target: manifest
          autoupdater-branch: stable
          release: ${{ needs.build-meta.outputs.release-version }}
          priority: 1

      - name: Manifest (Beta)
        uses: ./.github/actions/build
        if: ${{ needs.build-meta.outputs.manifest-beta != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          make-target: manifest
          autoupdater-branch: beta
          release: ${{ needs.build-meta.outputs.release-version }}
          priority: 1

      - name: Manifest (Testing)
        uses: ./.github/actions/build
        if: ${{ needs.build-meta.outputs.manifest-testing != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          make-target: manifest
          autoupdater-branch: testing
          release: ${{ needs.build-meta.outputs.release-version }}
          priority: 1
      
      - name: Sign manifest (Stable)
        uses: ./.github/actions/sign
        if: ${{ needs.build-meta.outputs.manifest-stable != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          output-dir: gluon-gha-data/gluon/output
          signing-key: 50b2b068ed87c0c3456e337292af8f9dd05343501894c9501025bb7f1a625d60
          manifest-branch: "stable"

      - name: Sign manifest (Beta)
        uses: ./.github/actions/sign
        if: ${{ needs.build-meta.outputs.manifest-beta != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          output-dir: gluon-gha-data/gluon/output
          signing-key: 50b2b068ed87c0c3456e337292af8f9dd05343501894c9501025bb7f1a625d60
          manifest-branch: "beta"

      - name: Sign manifest (Testing)
        uses: ./.github/actions/sign
        if: ${{ needs.build-meta.outputs.manifest-testing != '0' }}
        with:
          gluon-path: "gluon-gha-data/gluon"
          output-dir: gluon-gha-data/gluon/output
          signing-key: 50b2b068ed87c0c3456e337292af8f9dd05343501894c9501025bb7f1a625d60
          manifest-branch: "testing"

      - name: Create Artifact Directory
        run: mkdir gluon-gha-data/artifact-out

      - name: Pack Manifest
        run: find ./gluon-gha-data/gluon/output/images/sysupgrade -maxdepth 1 -name "*.manifest" -exec basename {} \ | tar cJf gluon-gha-data/artifact-out/manifest.tar.xz -T -

      - name: Archive output
        uses: actions/upload-artifact@v3
        with:
          name: manifest-signed
          path: gluon-gha-data/artifact-out


  deploy:
    needs: [ build, build-meta, targets, manifest ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: "gluon-gha-data/artifact-download"

      - name: Print Output Directory structure
        run: tree gluon-gha-data/artifact-download
      
      - name: Create Directory to store Gluon output into
        run: mkdir gluon-gha-data/gluon-output

      - name: Combine Build output
        uses: ./.github/actions/build-combine
        with:
          artifact-dir: "gluon-gha-data/artifact-download"
          output-dir: "gluon-gha-data/gluon-output"
          targets: ${{ needs.targets.outputs.targets }}
      
      - name: Extract Manifest
        run: tar xf gluon-gha-data/artifact-download/manifest-signed/manifest.tar.xz -C gluon-gha-data/gluon-output/output/images/sysupgrade
      
      - name: Show Directory structure
        run: tree gluon-gha-data/gluon-output 
